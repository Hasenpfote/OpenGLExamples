#version 430

layout(quads, equal_spacing, ccw) in;	// 等間隔(入力そのまま)
//layout(quads, fractional_odd_spacing, ccw) in;	// 奇数間隔(奇数ならそのまま、偶数なら奇数に)
//layout(quads, fractional_even_spacing, ccw) in;	// 偶数間隔(偶数ならそのまま、奇数なら偶数に)

in gl_PerVertex
{
  vec4 gl_Position;
  float gl_PointSize;
  float gl_ClipDistance[];
} gl_in[gl_MaxPatchVertices];

out gl_PerVertex
{
  vec4 gl_Position;
  float gl_PointSize;
  float gl_ClipDistance[];
};

in vec2 tesTCoord[];
out vec2 gsTCoord;

uniform mat4 mvp;
uniform float horizontal_scale;
uniform float vertical_scale;
uniform sampler2D height_map;

vec2 interpolate(const in vec2 v0, const in vec2 v1, const in vec2 v2, const in vec2 v3)
{
	vec2 a = mix(v0, v1, gl_TessCoord.x);
	vec2 b = mix(v3, v2, gl_TessCoord.x);
	return mix(a, b, gl_TessCoord.y);
}

void main()
{
	vec2 tc = interpolate(tesTCoord[0], tesTCoord[1], tesTCoord[2], tesTCoord[3]);

	vec4 pos;
	pos.xz = tc * horizontal_scale;
	pos.y = texture2D(height_map, tc).r * vertical_scale;
	pos.w = 1.0;
	gl_Position = mvp * pos;

	gsTCoord = tc;
}